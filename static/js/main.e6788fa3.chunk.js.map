{"version":3,"sources":["reducers/types.js","reducers/authenticatinReducer.js","reducers/index.js","helpers/store.js","components/Common/AppRoute.js","constants/apiRoutes.js","components/Common/Header.js","actions/authenticationAction.js","components/Common/MainLayout.js","components/Common/EmptyLayout.js","components/Account/Login.js","helpers/authhelper.js","components/Account/Register.js","actions/userAction.js","components/Home/index.js","components/Account/index.js","App.js","helpers/auth-header.js","serviceWorker.js","index.js"],"names":["LOGOUT","user","JSON","parse","localStorage","getItem","initialState","errorMessage","rootReducer","combineReducers","authenticationReducer","state","action","type","payload","pageData","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","AppRoute","Component","component","Layout","layout","rest","render","props","BaseApiUrl","Header","handleLogout","e","preventDefault","LogOut","navLink","userData","this","FullName","RoleName","fullImageUrl","BaseUrl","ImageUrl","profileLink","Fragment","id","className","style","width","src","NavDropdown","title","alignRight","Item","as","Link","to","icon","faUserCog","faUser","Divider","onClick","faSignOutAlt","Nav","Navbar","bg","expand","fixed","Container","Brand","Toggle","aria-controls","Collapse","connect","dispatch","removeItem","MainLayout","children","EmptyLayout","Login","email","password","isLoading","handleChange","setState","target","name","value","handleSubmit","event","Authentication","history","push","Form","onSubmit","Group","Label","Control","onChange","placeholder","required","Check","label","Spinner","animation","Button","variant","block","username","authinfo","Username","Password","axios","post","then","resp","data","Success","setItem","stringify","Result","Message","err","Register","surname","message","postData","Name","Surname","Email","RegisterUser","RegisterResponse","callback","Home","Account","App","SessionToken","defaults","headers","common","authHeader","exact","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.e6788fa3.chunk.js","sourcesContent":["export const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const GET_PAGE_DATA = \"GET_PAGE_DATA\";\r\n\r\nexport const LOGOUT = \"USERS_LOGOUT\";\r\n","import { SET_CURRENT_USER, GET_PAGE_DATA, LOGOUT, SET_MESSAGE } from \"./types\";\r\nimport { isEmpty } from \"../helpers/validator\";\r\n\r\nlet user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = {\r\n  user: user ? user : null,\r\n  errorMessage: null\r\n};\r\n\r\nexport function authenticationReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        errorMessage: action.payload\r\n      };\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case LOGOUT:\r\n      return {};\r\n    case GET_PAGE_DATA:\r\n      return {\r\n        ...state,\r\n        pageData: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { authenticationReducer } from \"./authenticatinReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  authenticationReducer: authenticationReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunkMiddleware, loggerMiddleware)\r\n);\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst AppRoute = ({ component: Component, layout: Layout, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => (\r\n      <Layout>\r\n        <Component {...props} />\r\n      </Layout>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default AppRoute;\r\n","export const BaseApiUrl = \"http://startupapp1-001-site1.htempurl.com/api/\";\r\nexport const BaseUrl = \"http://startupapp1-001-site1.htempurl.com/\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { BaseUrl } from \"../../constants/apiRoutes\";\r\nimport { LogOut } from \"../../actions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\r\nimport {\r\n  faUser,\r\n  faUserCog,\r\n  faSignOutAlt\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass Header extends Component {\r\n  handleLogout = (e) => {\r\n    e.preventDefault();\r\n    this.props.LogOut();\r\n  };\r\n  render() {\r\n    const { userData } = this.props;\r\n\r\n    let navLink;\r\n    if (userData) {\r\n      const { FullName, RoleName, ImageUrl } = userData;\r\n      const fullImageUrl = BaseUrl + \"UserImage/\" + ImageUrl;\r\n      let profileLink = (\r\n        <React.Fragment>\r\n          <span\r\n            id=\"userFullName\"\r\n            className=\"mr-2 d-none d-lg-inline text-gray-600 small font-weight-bolder\"\r\n          >\r\n            Welcome,{FullName}\r\n          </span>\r\n          <img\r\n            className=\"img-profile rounded-circle\"\r\n            style={{ width: \"40px\" }}\r\n            src={fullImageUrl}\r\n          />\r\n        </React.Fragment>\r\n      );\r\n      navLink = (\r\n        <React.Fragment>\r\n          <NavDropdown title={profileLink} alignRight>\r\n            {RoleName === \"Admin\" ? (\r\n              <NavDropdown.Item as={Link} to={\"/Dashboard\"}>\r\n                <FontAwesomeIcon\r\n                  className=\"fa-sm fa-fw mr-2 text-gray-400\"\r\n                  icon={faUserCog}\r\n                />\r\n                Dashboard\r\n              </NavDropdown.Item>\r\n            ) : (\r\n              <NavDropdown.Item as={Link} to={\"/Account\"}>\r\n                <FontAwesomeIcon\r\n                  className=\"fa-sm fa-fw mr-2 text-gray-400\"\r\n                  icon={faUser}\r\n                />\r\n                My Account\r\n              </NavDropdown.Item>\r\n            )}\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item onClick={this.handleLogout}>\r\n              <FontAwesomeIcon\r\n                className=\"fa-sm fa-fw mr-2 text-gray-400\"\r\n                icon={faSignOutAlt}\r\n              />\r\n              Logout\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      navLink = (\r\n        <React.Fragment>\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to={\"/Account/Login\"}>\r\n              Login\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to={\"/Account/Register\"}>\r\n              Register\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Navbar bg=\"light\" expand=\"lg\" fixed=\"top\">\r\n        <Container>\r\n          <Navbar.Brand as={Link} to=\"/\">\r\n            StartUpApp\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">{navLink}</Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userData: state.authenticationReducer.user\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { LogOut })(Header);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { BaseApiUrl } from \"../constants/apiRoutes\";\r\nimport { SET_CURRENT_USER, SET_MESSAGE, LOGOUT } from \"../reducers/types\";\r\nimport { isEmpty } from \"../helpers/validator\";\r\n\r\nexport const Authentication = (username, password, history) => (dispatch) => {\r\n  let authinfo = {\r\n    Username: username,\r\n    Password: password\r\n  };\r\n  axios.post(BaseApiUrl + \"Users/Login\", authinfo).then(\r\n    (resp) => {\r\n      if (resp.data.Success === true) {\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.setItem(\"user\", JSON.stringify(resp.data.Result));\r\n        dispatch({\r\n          type: SET_CURRENT_USER,\r\n          payload: resp.data.Result\r\n        });\r\n        history.push(\"/\");\r\n      } else {\r\n        dispatch({\r\n          type: SET_MESSAGE,\r\n          payload: resp.data.Message\r\n        });\r\n      }\r\n    },\r\n    (err) => {\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: \"Failed to connect to the server..\"\r\n      });\r\n    }\r\n  );\r\n};\r\n\r\nexport const LogOut = () => (dispatch) => {\r\n  localStorage.removeItem(\"user\");\r\n  dispatch({\r\n    type: LOGOUT\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nconst MainLayout = (props) => (\r\n  <React.Fragment>\r\n    <Header />\r\n    <div className=\"auth-wrapper container\">\r\n      <div className=\"auth-inner\">{props.children}</div>\r\n    </div>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default MainLayout;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nconst EmptyLayout = (props) => (\r\n  <div className=\"auth-wrapper container\">\r\n    <div className=\"auth-inner\">{props.children}</div>\r\n  </div>\r\n);\r\n\r\nexport default EmptyLayout;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Authentication } from \"../../actions\";\r\nimport { isLoggedIn } from \"../../helpers/authhelper\";\r\nimport { Form, Button, Spinner } from \"react-bootstrap\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    isLoading: false\r\n  };\r\n  componentWillMount() {\r\n    if (isLoggedIn()) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({ ...this.state, [e.target.name]: e.target.value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    this.setState({ ...this.state, isLoading: true });\r\n    event.preventDefault();\r\n    let { email, password } = this.state;\r\n    this.props.Authentication(email, password, this.props.history);\r\n    this.setState({ ...this.state, isLoading: false });\r\n  };\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <h3>Sign In</h3>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            value={this.state.email}\r\n            onChange={(e) => this.handleChange(e)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            value={this.state.password}\r\n            onChange={(e) => this.handleChange(e)}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter password\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Check type=\"checkbox\" label=\" Remember me\" name=\"IsRemember\" />\r\n          {this.props.errorMessage && (\r\n            <Form.Label className=\"text-danger small text-right\">\r\n              {this.props.errorMessage}\r\n            </Form.Label>\r\n          )}\r\n          {isLoading && <Spinner animation=\"border\" />}\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\" block>\r\n          Login\r\n        </Button>\r\n        <p className=\"forgot-password text-right\">\r\n          Forgot <Link to=\"/Account/ForgotPassword\">password?</Link>\r\n        </p>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  classes: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errorMessage: state.authenticationReducer.errorMessage\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  Authentication\r\n})(Login);\r\n","export const isLoggedIn = () => {\r\n  if (localStorage.getItem(\"user\")) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { RegisterUser } from \"../../actions\";\r\nimport { Form, Button, Spinner } from \"react-bootstrap\";\r\nclass Register extends Component {\r\n  state = {\r\n    name: \"\",\r\n    surname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    isLoading: false,\r\n    message: \"\"\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({ ...this.state, [e.target.name]: e.target.value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ ...this.state, isLoading: true });\r\n    let { name, surname, email, password } = this.state;\r\n    let postData = {\r\n      Name: name,\r\n      Surname: surname,\r\n      Email: email,\r\n      Password: password\r\n    };\r\n    this.props.RegisterUser(postData, (data) => this.RegisterResponse(data));\r\n  };\r\n\r\n  RegisterResponse = (data) => {\r\n    this.setState({ ...this.state, isLoading: false, message: data.Message });\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, message } = this.state;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <h3>Sign Up</h3>\r\n\r\n        <Form.Group>\r\n          <Form.Label>First name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"First name\"\r\n            name=\"name\"\r\n            onChange={(e) => this.handleChange(e)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <div className=\"form-group\">\r\n          <Form.Label>Last name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Last name\"\r\n            name=\"surname\"\r\n            onChange={(e) => this.handleChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            name=\"email\"\r\n            onChange={(e) => this.handleChange(e)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            name=\"password\"\r\n            onChange={(e) => this.handleChange(e)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          {this.props.errorMessage && (\r\n            <Form.Label className=\"text-danger small text-right\">\r\n              {this.props.errorMessage}\r\n            </Form.Label>\r\n          )}\r\n          {isLoading && <Spinner animation=\"border\" />}\r\n        </Form.Group>\r\n        {message && (\r\n          <Form.Label className=\"text-danger small text-right\">\r\n            {message}\r\n          </Form.Label>\r\n        )}\r\n        <Button variant=\"primary\" type=\"submit\" block>\r\n          Register\r\n        </Button>\r\n        <p className=\"forgot-password text-right\">\r\n          Already registered <Link to=\"/Account/Login\">login?</Link>\r\n        </p>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\nexport default connect(mapStateToProps, {\r\n  RegisterUser\r\n})(Register);\r\n","import axios from \"axios\";\r\nimport { BaseApiUrl } from \"../constants/apiRoutes\";\r\nimport { SET_MESSAGE } from \"../reducers/types\";\r\nimport { isEmpty } from \"../helpers/validator\";\r\n\r\nexport const RegisterUser = (postData, callback) => (dispatch) => {\r\n  axios.post(BaseApiUrl + \"Users/RegisterUser\", postData).then(\r\n    (resp) => {\r\n      callback && callback(resp.data);\r\n    },\r\n    (err) => {\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: \"Failed to connect to the server..\"\r\n      });\r\n    }\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-6 col-md-offset-3\">\r\n        <h1>This is homepage</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Account extends Component {\r\n  render() {\r\n    return <div>This is account page</div>;\r\n  }\r\n}\r\n\r\nexport default Account;\r\n","import React from \"react\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport AppRoute from \"./components/Common/AppRoute\";\r\nimport MainLayout from \"./components/Common/MainLayout\";\r\nimport EmptyLayout from \"./components/Common/EmptyLayout\";\r\nimport Login from \"./components/Account/Login\";\r\nimport Register from \"./components/Account/Register\";\r\nimport Home from \"./components/Home\";\r\nimport { authHeader } from \"../src/helpers\";\r\nimport Account from \"./components/Account\";\r\n\r\nfunction App() {\r\n  authHeader();\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <AppRoute exact path=\"/\" layout={MainLayout} component={Home} />\r\n          <AppRoute\r\n            exact\r\n            path=\"/Account/Login\"\r\n            layout={EmptyLayout}\r\n            component={Login}\r\n          />\r\n          <AppRoute\r\n            exact\r\n            path=\"/Account/Register\"\r\n            layout={EmptyLayout}\r\n            component={Register}\r\n          />\r\n          <AppRoute\r\n            exact\r\n            path=\"/Account\"\r\n            layout={MainLayout}\r\n            component={Account}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import axios from \"axios\";\r\n\r\nexport function authHeader() {\r\n  // return authorization header with jwt token\r\n  let user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.SessionToken) {\r\n    axios.defaults.headers.common[\r\n      \"Authorization\"\r\n    ] = `Bearer ${user.SessionToken}`;\r\n  } else {\r\n    axios.defaults.headers.common[\"Authorization\"] = \"\";\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { store } from \"./helpers\";\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}